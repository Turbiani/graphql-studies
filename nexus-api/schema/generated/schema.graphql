### This file was autogenerated by GraphQL Nexus
### Do not make changes to this file directly


enum _UserPosition {
  ADMIN
  APPROVER
  MANAGER
}

enum _UserRoles {
  Enity_Edit
  Enity_Owner
  Enity_View
}

enum _UserStatus {
  ACTIVE
  IN_EVALUATION
  INACTIVE
}

enum _UserTypes {
  ADMIN
  CUSTOMER
}

input InputUserWhere {
  name: String
  status: [_UserStatus]
}

type Mutation {
  createUser(email: String!, name: String!, parentUser: ID, password: String!, phone: String!, roles: [String!]!, type: String, verifyEmail: Boolean): User
  updateUser(active: Boolean, avatar: String, companies: [ID], email: String, name: String, phone: String, position: String, roles: [_UserRoles], userId: ID!): User
}

type Query {
  getUser(userId: ID!): User
  getUsers(where: InputUserWhere): [User]
}

type User {
  active: Boolean
  avatar: String
  email: String
  id: ID!
  name: String!
  parentUser: User
  phone: String
  position: _UserPosition
  roles: [_UserRoles]
  status: _UserStatus
  type: _UserTypes
  verifyEmail: Boolean
}
